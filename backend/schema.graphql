### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumVisibilityNullableFilter {
  equals: Visibility
  in: [Visibility!]
  not: NestedEnumVisibilityNullableFilter
  notIn: [Visibility!]
}

type Flow {
  Body: String
  CreatedById: Int
  CreatedByUser: User
  CreatedTime: DateTime!
  FlowID: Int!
  Title: String
  Visibility: Visibility
}

input FlowCreateManyCreatedByUserInput {
  Body: String
  CreatedTime: DateTime
  FlowID: Int
  Title: String
  Visibility: Visibility
}

input FlowCreateManyCreatedByUserInputEnvelope {
  data: [FlowCreateManyCreatedByUserInput!]
  skipDuplicates: Boolean
}

input FlowCreateNestedManyWithoutCreatedByUserInput {
  connect: [FlowWhereUniqueInput!]
  connectOrCreate: [FlowCreateOrConnectWithoutCreatedByUserInput!]
  create: [FlowCreateWithoutCreatedByUserInput!]
  createMany: FlowCreateManyCreatedByUserInputEnvelope
}

input FlowCreateOrConnectWithoutCreatedByUserInput {
  create: FlowCreateWithoutCreatedByUserInput!
  where: FlowWhereUniqueInput!
}

input FlowCreateWithoutCreatedByUserInput {
  Body: String
  CreatedTime: DateTime
  Title: String
  Visibility: Visibility
}

input FlowListRelationFilter {
  every: FlowWhereInput
  none: FlowWhereInput
  some: FlowWhereInput
}

input FlowOrderByRelationAggregateInput {
  _count: SortOrder
}

input FlowWhereInput {
  AND: [FlowWhereInput!]
  Body: StringNullableFilter
  CreatedById: IntNullableFilter
  CreatedByUser: UserWhereInput
  CreatedTime: DateTimeFilter
  FlowID: IntFilter
  NOT: [FlowWhereInput!]
  OR: [FlowWhereInput!]
  Title: StringNullableFilter
  Visibility: EnumVisibilityNullableFilter
}

input FlowWhereUniqueInput {
  FlowID: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  createOneUser(data: UserCreateInput!): User!
  deleteOneUser(where: UserWhereUniqueInput!): User
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedEnumVisibilityNullableFilter {
  equals: Visibility
  in: [Visibility!]
  not: NestedEnumVisibilityNullableFilter
  notIn: [Visibility!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Query {
  flow(where: FlowWhereUniqueInput!): Flow
  flows(after: FlowWhereUniqueInput, before: FlowWhereUniqueInput, first: Int, last: Int, where: FlowWhereInput): [Flow!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByWithRelationInput!]): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  DisplayName: String
  Email: String!
  ProfilePictureLink: String
  UID: String
  UserID: Int!
}

input UserCreateInput {
  DisplayName: String
  Email: String!
  Flows: FlowCreateNestedManyWithoutCreatedByUserInput
  ProfilePictureLink: String
  UID: String
}

input UserOrderByWithRelationInput {
  DisplayName: SortOrder
  Email: SortOrder
  Flows: FlowOrderByRelationAggregateInput
  ProfilePictureLink: SortOrder
  UID: SortOrder
  UserID: SortOrder
}

input UserWhereInput {
  AND: [UserWhereInput!]
  DisplayName: StringNullableFilter
  Email: StringFilter
  Flows: FlowListRelationFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  ProfilePictureLink: StringNullableFilter
  UID: StringNullableFilter
  UserID: IntFilter
}

input UserWhereUniqueInput {
  UserID: Int
}

enum Visibility {
  HIDDEN
  PRIVATE
  PUBLIC
}